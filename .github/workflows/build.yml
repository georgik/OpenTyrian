name: Build OpenTyrian Application

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      board:
        description: 'Board to build for (all or specific board name)'
        required: true
        default: 'all'
      prefix:
        description: 'Prefix for binary name'
        required: true
        default: 'opentyrian'
      flash_size:
        description: 'Size of the Flash storage'
        required: true
        default: '16MB'
      data_partition:
        description: 'Name of data partition'
        required: true
        default: 'assets'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [m5stack_core_s3, esp32_p4_function_ev_board]
      fail-fast: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set Target for ESP-IDF
        run: |
          echo "TARGET=$(case ${{ matrix.board }} in
            esp-box-3) echo 'esp32s3';;
            m5stack_core_s3) echo 'esp32s3';;
            esp32_p4_function_ev_board) echo 'esp32p4';;
            *) echo 'Unknown target'; exit 1;;
          esac)" >> $GITHUB_ENV

      - name: esp-idf build and merge binaries
        uses: espressif/esp-idf-ci-action@v1.1.0
        with:
          esp_idf_version: latest
          target: ${{ env.TARGET }}
          path: '.'
          command: |
            idf.py @boards/${{ matrix.board }}.cfg build &&
            cd build.${{ matrix.board }} &&
            # Copy individual components for packaging
            cp bootloader/bootloader.bin ../bootloader-${{ matrix.board }}.bin &&
            cp partition_table/partition-table.bin ../partition-table-${{ matrix.board }}.bin &&
            cp esp32-open-tyrian.bin ../opentyrian.bin &&
            cp storage.bin ../storage.bin &&
            # Create merged binary for ESP Launchpad
            esptool.py --chip ${{ env.TARGET }} merge_bin -o ../opentyrian-${{ github.event.inputs.version }}-${{ matrix.board }}.bin "@flash_args"

      - name: Create package
        run: |
          chmod +x ./package.sh
          ./package.sh ${{ github.event.inputs.version }} ${{ matrix.board }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.prefix }}-${{ github.event.inputs.version }}-${{ matrix.board }}
          path: |
            opentyrian-${{ github.event.inputs.version }}-${{ matrix.board }}.zip
            opentyrian-${{ github.event.inputs.version }}-${{ matrix.board }}.bin
