name: Test ESP32 Application

on:
  workflow_run:
    workflows: ["Build ESP32 Application"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      board:
        description: 'Board to test'
        required: true
        default: 'esp-box-3'
      build_run_id:
        description: 'Build Workflow Run ID (optional, leave empty to use latest build)'
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [esp-box-3, esp-box, m5stack_core_s3, esp32_p4_function_ev_board]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find latest build run ID
        if: ${{ github.event_name == 'workflow_dispatch' && !github.event.inputs.build_run_id }}
        run: |
          echo "Fetching latest build run ID..."
          RUN_ID=$(gh run list --workflow "Build ESP32 Application" --json databaseId --jq '.[0].databaseId')
          echo "BUILD_RUN_ID=${RUN_ID}" >> $GITHUB_ENV

      - name: Set build run ID
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.build_run_id }}
        run: |
          echo "BUILD_RUN_ID=${{ github.event.inputs.build_run_id }}" >> $GITHUB_ENV

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build.${{ matrix.board }}
          path: build/
          run-id: ${{ env.BUILD_RUN_ID || github.run.id }}

      - name: Setup Wokwi CLI
        uses: wokwi/wokwi-ci-action@v1
        with:
          token: ${{ secrets.WOKWI_CLI_TOKEN }}
          path: . # assumes wokwi.toml is in the root directory
          timeout: 30000
          expect_text: 'OpenTyrian initialization...'
          fail_text: 'Error'
          serial_log_file: 'wokwi-logs-${{ matrix.board }}.txt'

      - name: Upload Wokwi Logs
        uses: actions/upload-artifact@v4
        with:
          name: wokwi-logs-${{ matrix.board }}
          path: wokwi-logs-${{ matrix.board }}.txt
