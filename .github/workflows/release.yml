name: Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name of the GitHub Release'
        required: true
        default: 'v1.0.0'
      release_tag:
        description: 'Tag for the GitHub Release'
        required: true
        default: 'v1.0.0'
      prefix:
        description: 'Prefix for binary name'
        required: true
        default: 'opentyrian'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Check if Release Exists
        id: check_release
        run: |
          set +e
          gh release view ${{ github.event.inputs.release_tag }} > /dev/null 2>&1
          if [ $? -eq 0 ]; then
            echo "Release already exists."
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "Release does not exist."
            echo "release_exists=false" >> $GITHUB_ENV
          fi
          set -e

      - name: Generate Flashing Instructions
        run: |
          cat > /tmp/release_notes.md <<EOF
          # OpenTyrian ${{ github.event.inputs.release_tag }}
          
          ## Web-based Flashing (Easiest)
          
          Use our web-based installer for one-click flashing:
          
          [![Try it with ESP Launchpad](https://espressif.github.io/esp-launchpad/assets/try_with_launchpad.png)](https://georgik.github.io/OpenTyrian/?flashConfigURL=https://georgik.github.io/OpenTyrian/config/config.toml)
          
          ## Manual Installation
          
          1. Download the appropriate zip file for your board
          2. Extract the zip file
          3. Run the flashing script for your platform:
             - Linux/macOS: `./flash.sh`
             - Windows (Command Prompt): `flash.bat`
             - Windows (PowerShell): `flash.ps1`
          
          ## Game Controls
          
          - USB Keyboard: Connect any USB keyboard for full game control
          - T-Keyboard S3 Pro: Enhanced gaming experience with programmable keys
          
          ## Available Boards
          - M5Stack Core S3
          - ESP32-P4 Function EV Board
          EOF

      - name: Create Release
        if: env.release_exists == 'false'
        run: |
          gh release create ${{ github.event.inputs.release_tag }} --title "${{ github.event.inputs.release_name }}" --prerelease --notes-file /tmp/release_notes.md

      - name: Download Build Artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          name_is_regexp: true
          name: '${{ github.event.inputs.prefix }}-${{ github.event.inputs.release_tag }}-.*'
          path: artifacts

      - name: List Downloaded Files
        run: |
          echo "Listing all files in the artifacts directory:"
          find artifacts -type f

      - name: Upload Package Assets to Release
        run: |
          # Upload all zip packages to the release
          for file in $(find artifacts -type f -name "*.zip"); do
            # Upload the zip package directly
            gh release upload "${{ github.event.inputs.release_tag }}" "$file" --clobber
          done
          # Upload merged binaries for ESP Launchpad
          for file in $(find artifacts -type f -name "*.bin"); do
            # Upload the merged binary directly
            gh release upload "${{ github.event.inputs.release_tag }}" "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
